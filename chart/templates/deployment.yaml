apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gatekeeper-policy-manager.fullname" . }}
  labels:
    {{- include "gatekeeper-policy-manager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gatekeeper-policy-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gatekeeper-policy-manager.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gatekeeper-policy-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          env:
            - name: GPM_LOG_LEVEL
              value: {{ .Values.config.logLevel | upper | quote }}
            - name: GPM_PREFERRED_URL_SCHEME
              value: {{ required "A valid .Values.config.preferredURLScheme entry required! Choose either http or https" .Values.config.preferredURLScheme | quote }}
            - name: GPM_SECRET_KEY
              {{- if .Values.config.secretKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "gatekeeper-policy-manager.fullname" . }}
                  key: secretKey
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretRef }}
                  key: secretKey
              {{- end }}
            {{- if .Values.config.oidc.enabled }}
            - name: GPM_AUTH_ENABLED
              value: "OIDC"
            - name: GPM_OIDC_REDIRECT_DOMAIN
              value: {{ .Values.config.oidc.redirectDomain }}
            - name: GPM_OIDC_CLIENT_ID
              value: {{ .Values.config.oidc.clientID }}
            {{- if .Values.config.oidc.clientSecret}}
            - name: GPM_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "gatekeeper-policy-manager.fullname" . }}-oidc
                  key: clientSecret
            {{- end }}
            - name: GPM_OIDC_ISSUER
              value: {{ .Values.config.oidc.issuer }}
            {{- if .Values.config.oidc.authorizationEndpoint }}
            - name: GPM_OIDC_AUTHORIZATION_ENDPOINT
              value: {{ .Values.config.oidc.authorizationEndpoint }}
            {{- end }}
            {{- if .Values.config.oidc.jwksURI }}
            - name: GPM_OIDC_JWKS_URI
              value: {{ .Values.config.oidc.jwksURI }}
            {{- end }}
            {{- if .Values.config.oidc.tokenEndpoint }}
            - name: GPM_OIDC_TOKEN_ENDPOINT
              value: {{ .Values.config.oidc.tokenEndpoint }}
            {{- end }}
            {{- if .Values.config.oidc.introspectionEndpoint }}
            - name: GPM_OIDC_INTROSPECTION_ENDPOINT
              value: {{ .Values.config.oidc.introspectionEndpoint }}
            {{- end }}
            {{- if .Values.config.oidc.userinfoEndpoint }}
            - name: GPM_OIDC_USERINFO_ENDPOINT
              value: {{ .Values.config.oidc.userinfoEndpoint }}
            {{- end }}
            {{- if .Values.config.oidc.endSessionEndpoint }}
            - name: GPM_OIDC_END_SESSION_ENDPOINT
              value: {{ .Values.config.oidc.endSessionEndpoint }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraEnvs }}
            {{ toYaml .Values.extraEnvs | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.config.multiCluster.enabled }}
          volumeMounts:
            - mountPath: /home/gpm/.kube/config
              name: kubeconfig
              subPath: kubeconfig
      volumes:
        - name: kubeconfig
          secret:
            secretName: {{ include "gatekeeper-policy-manager.fullname" . }}-multicluster
          {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}