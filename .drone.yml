# Copyright (c) 2020 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
name: license

steps:
  - name: check
    image: docker.io/library/golang:1.16.4
    pull: always
    commands:
      - go get -u github.com/google/addlicense
      - addlicense -c "SIGHUP s.r.l" -v -l bsd --check .
---
kind: pipeline
name: policeman

depends_on:
  - license

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      FILTER_REGEX_EXCLUDE: app/static/prism.*
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.20.0_3.6.1_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build . > gpm.yml

  - name: deprek8ion
    image: eu.gcr.io/swade1987/deprek8ion:1.1.34
    pull: always
    depends_on:
      - render
    commands:
      - /conftest test -p /policies gpm.yml

---
kind: pipeline
name: build

depends_on:
  - policeman

trigger:
  ref:
    include:
      - refs/tags/**
      - refs/heads/**

steps:
  - name: build
    image: docker:dind
    pull: always
    environment:
      CONTAINER_IMAGE_NAME: gatekeeper-policy-manager
      CONTAINER_IMAGE_TAG: test-${DRONE_BUILD_NUMBER}
      DOCKERFILE: Dockerfile
      BUILD_CONTEXT: "."
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker build
        --pull=true
        --rm=true
        -f $${DOCKERFILE}
        -t $${CONTAINER_IMAGE_NAME}:$${CONTAINER_IMAGE_TAG}
        $${BUILD_CONTEXT}

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: e2e

depends_on:
  - build

trigger:
  ref:
    include:
      - refs/tags/**
      - refs/heads/master
      - refs/heads/renovate/*

steps:
  - name: kind
    image: docker:dind
    pull: always
    environment:
      KIND_VERSION: v0.9.0
      CLUSTER_VERSION: v1.19.1
      LOAD_IMAGE: gatekeeper-policy-manager:test-${DRONE_BUILD_NUMBER}
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - wget -qO /usr/local/bin/kind "https://kind.sigs.k8s.io/dl/$${KIND_VERSION}/kind-$(uname)-amd64"
      - wget -qO /usr/local/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/$${CLUSTER_VERSION}/bin/linux/amd64/kubectl"
      - chmod +x /usr/local/bin/kind /usr/local/bin/kubectl
      - kind create cluster --name $${CLUSTER_NAME} --image kindest/node:$${CLUSTER_VERSION}
      - kind load docker-image $${LOAD_IMAGE} --name $${CLUSTER_NAME}
      - kind get kubeconfig --name $${CLUSTER_NAME} > kubeconfig.yml

  - name: tests
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.4.0_1.20.0_3.6.1_2.4.1
    pull: always
    network_mode: host
    environment:
      KUBECONFIG: /tmp/kubeconfig.yml
      LOAD_IMAGE: gatekeeper-policy-manager:test-${DRONE_BUILD_NUMBER}
    commands:
      - mv kubeconfig.yml $${KUBECONFIG}
      - cd tests
      - kustomize edit set image quay.io/sighup/gatekeeper-policy-manager=$${LOAD_IMAGE}
      - cd -
      - bats -t tests/tests.sh

  - name: kind-destroy
    image: docker:dind
    pull: always
    environment:
      KIND_VERSION: v0.9.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - wget -qO /usr/local/bin/kind "https://kind.sigs.k8s.io/dl/$${KIND_VERSION}/kind-$(uname)-amd64"
      - chmod +x /usr/local/bin/kind
      - kind delete cluster --name $${CLUSTER_NAME}
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
name: release

depends_on:
  - license
  - policeman
  - e2e

trigger:
  ref:
    include:
      - refs/tags/**
      - refs/heads/**
    exclude:
      - refs/heads/renovate/*

steps:
  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [ clone ]
    commands:
      - tar -zcvf gatekeeper-policy-manager-${DRONE_TAG}.tar.gz manifests/ kustomization.yaml LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [ clone ]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: registry-sha
    image: docker:dind
    pull: always
    depends_on: [ clone ]
    environment:
      username:
        from_secret: quay_username
      password:
        from_secret: quay_password
      registry: quay.io
      repo: quay.io/sighup/gatekeeper-policy-manager
      container_image_name: gatekeeper-policy-manager
      container_image_tag: test-${DRONE_BUILD_NUMBER}
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login $${registry} -u $${username} -p $${password}
      - docker tag $${container_image_name}:$${container_image_tag} $${repo}:unstable
      - "docker tag $${container_image_name}:$${container_image_tag} $${repo}:${DRONE_COMMIT_SHA}"
      - docker push $${repo}:unstable
      - "docker push $${repo}:${DRONE_COMMIT_SHA}"
      - docker rmi $${container_image_name}:$${container_image_tag}
    when:
      event:
        - push

  - name: registry-tag
    image: docker:dind
    pull: always
    depends_on: [ clone ]
    environment:
      username:
        from_secret: quay_username
      password:
        from_secret: quay_password
      registry: quay.io
      repo: quay.io/sighup/gatekeeper-policy-manager
      container_image_name: gatekeeper-policy-manager
      container_image_tag: test-${DRONE_BUILD_NUMBER}
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login $${registry} -u $${username} -p $${password}
      - docker tag $${container_image_name}:$${container_image_tag} $${repo}:latest
      - "docker tag $${container_image_name}:$${container_image_tag} $${repo}:${DRONE_TAG}"
      - docker push $${repo}:latest
      - "docker push $${repo}:${DRONE_TAG}"
      - docker rmi $${container_image_name}:$${container_image_tag}
    when:
      event:
        - tag

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
      - registry-tag
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - gatekeeper-policy-manager-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
      - registry-tag
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - gatekeeper-policy-manager-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
